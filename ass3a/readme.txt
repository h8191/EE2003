Check this file if anything is not clearly mentioned in the Block diagram pdf

shifter: 
		It is the combinational logic that edits data that is read from dmem
		and that will be writen into dmem, 
		***it is not a seperate module since it is just two case statements
		It is written inside cpu ***

		inputs: rv2,drdata
		outputs: 
		controlled by : rd_sign,we,re(generated by decoder)
		rd_sign==0 implies sign extend byte or halfwords read from dmem
		       ==1 unsigned load from dmem

Decoder: 
	inputs: idata,alu_out
	alu_out is taken as input of decoder to select how pc should be 
	updated normal_increment or branch by setting the value of pc_sel accordingly

	alu_out is also used for setting values of contols to shifter

	outputs:
	rd_sign,re,we (to shifter)
	imm : immediate required for various operations

	rf_we: write enable for register file.
	rd_sel: control signal for mux that writes into reg_file(alu_out,shifter output,
			pc + 4,pc+imm)

	pc_sel :control signal for mux used for updating pc_value
	
	op: for alu to select which operation needs to be done.
	alu_in2_sel: to select the second operand as rv2 or imm
	
RegFile: 
	inputs:  rs1,rs2,rd are read directly from idata without using decoder
	rwdata(data to be written) is taken from a MUX
	outputs: rs1,rs2,x31

PC: the value of pc is stored in a register and is updated synchronously.
	input to this register is from a mux

DMEM:
	alu_output is connected to daddr
    gets we from decoder
    drdata and dwdata are connected to shifter 

IMEM: input iaddr is asynchronously connnected to pc
	ouptut idata is sent to regFile and decoder